{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":22,"width":1440,"height":874},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Applications/Atom.app/Contents/Resources/app/src","buffers":[{"text":"(function() {\n  var $, CSON, Emitter, Package, Q, ScopedProperties, async, fs, path, _,\n    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    __slice = [].slice;\n\n  path = require('path');\n\n  _ = require('underscore-plus');\n\n  async = require('async');\n\n  CSON = require('season');\n\n  fs = require('fs-plus');\n\n  Emitter = require('emissary').Emitter;\n\n  Q = require('q');\n\n  $ = null;\n\n  ScopedProperties = require('./scoped-properties');\n\n  module.exports = Package = (function() {\n    Emitter.includeInto(Package);\n\n    Package.stylesheetsDir = 'stylesheets';\n\n    Package.loadMetadata = function(packagePath, ignoreErrors) {\n      var error, metadata, metadataPath;\n      if (ignoreErrors == null) {\n        ignoreErrors = false;\n      }\n      if (metadataPath = CSON.resolve(path.join(packagePath, 'package'))) {\n        try {\n          metadata = CSON.readFileSync(metadataPath);\n        } catch (_error) {\n          error = _error;\n          if (!ignoreErrors) {\n            throw error;\n          }\n        }\n      }\n      if (metadata == null) {\n        metadata = {};\n      }\n      metadata.name = path.basename(packagePath);\n      return metadata;\n    };\n\n    Package.prototype.keymaps = null;\n\n    Package.prototype.menus = null;\n\n    Package.prototype.stylesheets = null;\n\n    Package.prototype.grammars = null;\n\n    Package.prototype.scopedProperties = null;\n\n    Package.prototype.mainModulePath = null;\n\n    Package.prototype.resolvedMainModulePath = false;\n\n    Package.prototype.mainModule = null;\n\n    function Package(path, metadata) {\n      var _ref, _ref1;\n      this.path = path;\n      this.metadata = metadata;\n      this.handleActivationEvent = __bind(this.handleActivationEvent, this);\n      if (this.metadata == null) {\n        this.metadata = Package.loadMetadata(this.path);\n      }\n      this.name = (_ref = (_ref1 = this.metadata) != null ? _ref1.name : void 0) != null ? _ref : path.basename(this.path);\n      this.reset();\n    }\n\n    Package.prototype.enable = function() {\n      return atom.config.removeAtKeyPath('core.disabledPackages', this.name);\n    };\n\n    Package.prototype.disable = function() {\n      return atom.config.pushAtKeyPath('core.disabledPackages', this.name);\n    };\n\n    Package.prototype.isTheme = function() {\n      var _ref;\n      return ((_ref = this.metadata) != null ? _ref.theme : void 0) != null;\n    };\n\n    Package.prototype.measure = function(key, fn) {\n      var startTime, value;\n      startTime = Date.now();\n      value = fn();\n      this[key] = Date.now() - startTime;\n      return value;\n    };\n\n    Package.prototype.getType = function() {\n      return 'atom';\n    };\n\n    Package.prototype.getStylesheetType = function() {\n      return 'bundled';\n    };\n\n    Package.prototype.load = function() {\n      this.measure('loadTime', (function(_this) {\n        return function() {\n          var error, _ref;\n          try {\n            _this.loadKeymaps();\n            _this.loadMenus();\n            _this.loadStylesheets();\n            _this.grammarsPromise = _this.loadGrammars();\n            _this.scopedPropertiesPromise = _this.loadScopedProperties();\n            if (!_this.hasActivationEvents()) {\n              return _this.requireMainModule();\n            }\n          } catch (_error) {\n            error = _error;\n            return console.warn(\"Failed to load package named '\" + _this.name + \"'\", (_ref = error.stack) != null ? _ref : error);\n          }\n        };\n      })(this));\n      return this;\n    };\n\n    Package.prototype.reset = function() {\n      this.stylesheets = [];\n      this.keymaps = [];\n      this.menus = [];\n      this.grammars = [];\n      return this.scopedProperties = [];\n    };\n\n    Package.prototype.activate = function() {\n      if (this.activationDeferred == null) {\n        this.activationDeferred = Q.defer();\n        this.measure('activateTime', (function(_this) {\n          return function() {\n            _this.activateResources();\n            if (_this.hasActivationEvents()) {\n              return _this.subscribeToActivationEvents();\n            } else {\n              return _this.activateNow();\n            }\n          };\n        })(this));\n      }\n      return Q.all([this.grammarsPromise, this.scopedPropertiesPromise, this.activationDeferred.promise]);\n    };\n\n    Package.prototype.activateNow = function() {\n      var e, _ref;\n      try {\n        this.activateConfig();\n        this.activateStylesheets();\n        if (this.requireMainModule()) {\n          this.mainModule.activate((_ref = atom.packages.getPackageState(this.name)) != null ? _ref : {});\n          this.mainActivated = true;\n        }\n      } catch (_error) {\n        e = _error;\n        console.warn(\"Failed to activate package named '\" + this.name + \"'\", e.stack);\n      }\n      return this.activationDeferred.resolve();\n    };\n\n    Package.prototype.activateConfig = function() {\n      var _base;\n      if (this.configActivated) {\n        return;\n      }\n      this.requireMainModule();\n      if (this.mainModule != null) {\n        atom.config.setDefaults(this.name, this.mainModule.configDefaults);\n        if (typeof (_base = this.mainModule).activateConfig === \"function\") {\n          _base.activateConfig();\n        }\n      }\n      return this.configActivated = true;\n    };\n\n    Package.prototype.activateStylesheets = function() {\n      var content, stylesheetPath, type, _i, _len, _ref, _ref1;\n      if (this.stylesheetsActivated) {\n        return;\n      }\n      type = this.getStylesheetType();\n      _ref = this.stylesheets;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        _ref1 = _ref[_i], stylesheetPath = _ref1[0], content = _ref1[1];\n        atom.themes.applyStylesheet(stylesheetPath, content, type);\n      }\n      return this.stylesheetsActivated = true;\n    };\n\n    Package.prototype.activateResources = function() {\n      var grammar, keymapPath, map, menuPath, scopedProperties, _i, _j, _k, _l, _len, _len1, _len2, _len3, _len4, _m, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7;\n      _ref = this.keymaps;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        _ref1 = _ref[_i], keymapPath = _ref1[0], map = _ref1[1];\n        atom.keymaps.add(keymapPath, map);\n      }\n      _ref2 = this.menus;\n      for (_j = 0, _len1 = _ref2.length; _j < _len1; _j++) {\n        _ref3 = _ref2[_j], menuPath = _ref3[0], map = _ref3[1];\n        atom.contextMenu.add(menuPath, map['context-menu']);\n      }\n      _ref4 = this.menus;\n      for (_k = 0, _len2 = _ref4.length; _k < _len2; _k++) {\n        _ref5 = _ref4[_k], menuPath = _ref5[0], map = _ref5[1];\n        if (map.menu) {\n          atom.menu.add(map.menu);\n        }\n      }\n      _ref6 = this.grammars;\n      for (_l = 0, _len3 = _ref6.length; _l < _len3; _l++) {\n        grammar = _ref6[_l];\n        grammar.activate();\n      }\n      this.grammarsActivated = true;\n      _ref7 = this.scopedProperties;\n      for (_m = 0, _len4 = _ref7.length; _m < _len4; _m++) {\n        scopedProperties = _ref7[_m];\n        scopedProperties.activate();\n      }\n      return this.scopedPropertiesActivated = true;\n    };\n\n    Package.prototype.loadKeymaps = function() {\n      return this.keymaps = this.getKeymapPaths().map(function(keymapPath) {\n        return [keymapPath, CSON.readFileSync(keymapPath)];\n      });\n    };\n\n    Package.prototype.loadMenus = function() {\n      return this.menus = this.getMenuPaths().map(function(menuPath) {\n        return [menuPath, CSON.readFileSync(menuPath)];\n      });\n    };\n\n    Package.prototype.getKeymapPaths = function() {\n      var keymapsDirPath;\n      keymapsDirPath = path.join(this.path, 'keymaps');\n      if (this.metadata.keymaps) {\n        return this.metadata.keymaps.map(function(name) {\n          return fs.resolve(keymapsDirPath, name, ['json', 'cson', '']);\n        });\n      } else {\n        return fs.listSync(keymapsDirPath, ['cson', 'json']);\n      }\n    };\n\n    Package.prototype.getMenuPaths = function() {\n      var menusDirPath;\n      menusDirPath = path.join(this.path, 'menus');\n      if (this.metadata.menus) {\n        return this.metadata.menus.map(function(name) {\n          return fs.resolve(menusDirPath, name, ['json', 'cson', '']);\n        });\n      } else {\n        return fs.listSync(menusDirPath, ['cson', 'json']);\n      }\n    };\n\n    Package.prototype.loadStylesheets = function() {\n      return this.stylesheets = this.getStylesheetPaths().map(function(stylesheetPath) {\n        return [stylesheetPath, atom.themes.loadStylesheet(stylesheetPath)];\n      });\n    };\n\n    Package.prototype.getStylesheetsPath = function() {\n      return path.join(this.path, this.constructor.stylesheetsDir);\n    };\n\n    Package.prototype.getStylesheetPaths = function() {\n      var indexStylesheet, stylesheetDirPath;\n      stylesheetDirPath = this.getStylesheetsPath();\n      if (this.metadata.stylesheetMain) {\n        return [fs.resolve(this.path, this.metadata.stylesheetMain)];\n      } else if (this.metadata.stylesheets) {\n        return this.metadata.stylesheets.map(function(name) {\n          return fs.resolve(stylesheetDirPath, name, ['css', 'less', '']);\n        });\n      } else if (indexStylesheet = fs.resolve(this.path, 'index', ['css', 'less'])) {\n        return [indexStylesheet];\n      } else {\n        return fs.listSync(stylesheetDirPath, ['css', 'less']);\n      }\n    };\n\n    Package.prototype.loadGrammars = function() {\n      var deferred, grammarsDirPath, loadGrammar;\n      this.grammars = [];\n      loadGrammar = (function(_this) {\n        return function(grammarPath, callback) {\n          return atom.syntax.readGrammar(grammarPath, function(error, grammar) {\n            var _ref;\n            if (error != null) {\n              console.warn(\"Failed to load grammar: \" + grammarPath, (_ref = error.stack) != null ? _ref : error);\n            } else {\n              _this.grammars.push(grammar);\n              if (_this.grammarsActivated) {\n                grammar.activate();\n              }\n            }\n            return callback();\n          });\n        };\n      })(this);\n      deferred = Q.defer();\n      grammarsDirPath = path.join(this.path, 'grammars');\n      fs.list(grammarsDirPath, ['json', 'cson'], function(error, grammarPaths) {\n        if (grammarPaths == null) {\n          grammarPaths = [];\n        }\n        return async.each(grammarPaths, loadGrammar, function() {\n          return deferred.resolve();\n        });\n      });\n      return deferred.promise;\n    };\n\n    Package.prototype.loadScopedProperties = function() {\n      var deferred, loadScopedPropertiesFile, scopedPropertiesDirPath;\n      this.scopedProperties = [];\n      loadScopedPropertiesFile = (function(_this) {\n        return function(scopedPropertiesPath, callback) {\n          return ScopedProperties.load(scopedPropertiesPath, function(error, scopedProperties) {\n            var _ref;\n            if (error != null) {\n              console.warn(\"Failed to load scoped properties: \" + scopedPropertiesPath, (_ref = error.stack) != null ? _ref : error);\n            } else {\n              _this.scopedProperties.push(scopedProperties);\n              if (_this.scopedPropertiesActivated) {\n                scopedProperties.activate();\n              }\n            }\n            return callback();\n          });\n        };\n      })(this);\n      deferred = Q.defer();\n      scopedPropertiesDirPath = path.join(this.path, 'scoped-properties');\n      fs.list(scopedPropertiesDirPath, ['json', 'cson'], function(error, scopedPropertiesPaths) {\n        if (scopedPropertiesPaths == null) {\n          scopedPropertiesPaths = [];\n        }\n        return async.each(scopedPropertiesPaths, loadScopedPropertiesFile, function() {\n          return deferred.resolve();\n        });\n      });\n      return deferred.promise;\n    };\n\n    Package.prototype.serialize = function() {\n      var e, _ref;\n      if (this.mainActivated) {\n        try {\n          return (_ref = this.mainModule) != null ? typeof _ref.serialize === \"function\" ? _ref.serialize() : void 0 : void 0;\n        } catch (_error) {\n          e = _error;\n          return console.error(\"Error serializing package '\" + this.name + \"'\", e.stack);\n        }\n      }\n    };\n\n    Package.prototype.deactivate = function() {\n      var _ref, _ref1;\n      if ((_ref = this.activationDeferred) != null) {\n        _ref.reject();\n      }\n      this.activationDeferred = null;\n      this.unsubscribeFromActivationEvents();\n      this.deactivateResources();\n      this.deactivateConfig();\n      if (this.mainActivated) {\n        if ((_ref1 = this.mainModule) != null) {\n          if (typeof _ref1.deactivate === \"function\") {\n            _ref1.deactivate();\n          }\n        }\n      }\n      return this.emit('deactivated');\n    };\n\n    Package.prototype.deactivateConfig = function() {\n      var _ref;\n      if ((_ref = this.mainModule) != null) {\n        if (typeof _ref.deactivateConfig === \"function\") {\n          _ref.deactivateConfig();\n        }\n      }\n      return this.configActivated = false;\n    };\n\n    Package.prototype.deactivateResources = function() {\n      var grammar, keymapPath, scopedProperties, stylesheetPath, _i, _j, _k, _l, _len, _len1, _len2, _len3, _ref, _ref1, _ref2, _ref3;\n      _ref = this.grammars;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        grammar = _ref[_i];\n        grammar.deactivate();\n      }\n      _ref1 = this.scopedProperties;\n      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n        scopedProperties = _ref1[_j];\n        scopedProperties.deactivate();\n      }\n      _ref2 = this.keymaps;\n      for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n        keymapPath = _ref2[_k][0];\n        atom.keymaps.remove(keymapPath);\n      }\n      _ref3 = this.stylesheets;\n      for (_l = 0, _len3 = _ref3.length; _l < _len3; _l++) {\n        stylesheetPath = _ref3[_l][0];\n        atom.themes.removeStylesheet(stylesheetPath);\n      }\n      this.stylesheetsActivated = false;\n      this.grammarsActivated = false;\n      return this.scopedPropertiesActivated = false;\n    };\n\n    Package.prototype.reloadStylesheets = function() {\n      var content, oldSheets, stylesheetPath, _i, _j, _len, _len1, _ref, _ref1, _results;\n      oldSheets = _.clone(this.stylesheets);\n      this.loadStylesheets();\n      for (_i = 0, _len = oldSheets.length; _i < _len; _i++) {\n        stylesheetPath = oldSheets[_i][0];\n        atom.themes.removeStylesheet(stylesheetPath);\n      }\n      _ref = this.stylesheets;\n      _results = [];\n      for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {\n        _ref1 = _ref[_j], stylesheetPath = _ref1[0], content = _ref1[1];\n        _results.push(this.reloadStylesheet(stylesheetPath, content));\n      }\n      return _results;\n    };\n\n    Package.prototype.reloadStylesheet = function(stylesheetPath, content) {\n      return atom.themes.applyStylesheet(stylesheetPath, content, this.getStylesheetType());\n    };\n\n    Package.prototype.requireMainModule = function() {\n      var mainModulePath;\n      if (this.mainModule != null) {\n        return this.mainModule;\n      }\n      mainModulePath = this.getMainModulePath();\n      if (fs.isFileSync(mainModulePath)) {\n        return this.mainModule = require(mainModulePath);\n      }\n    };\n\n    Package.prototype.getMainModulePath = function() {\n      var mainModulePath;\n      if (this.resolvedMainModulePath) {\n        return this.mainModulePath;\n      }\n      this.resolvedMainModulePath = true;\n      mainModulePath = this.metadata.main ? path.join(this.path, this.metadata.main) : path.join(this.path, 'index');\n      return this.mainModulePath = fs.resolveExtension(mainModulePath, [\"\"].concat(__slice.call(_.keys(require.extensions))));\n    };\n\n    Package.prototype.hasActivationEvents = function() {\n      var event, selector, _ref;\n      if (_.isArray(this.metadata.activationEvents)) {\n        return this.metadata.activationEvents.some(function(activationEvent) {\n          return (activationEvent != null ? activationEvent.length : void 0) > 0;\n        });\n      } else if (_.isString(this.metadata.activationEvents)) {\n        return this.metadata.activationEvents.length > 0;\n      } else if (_.isObject(this.metadata.activationEvents)) {\n        _ref = this.metadata.activationEvents;\n        for (event in _ref) {\n          selector = _ref[event];\n          if (event.length > 0 && selector.length > 0) {\n            return true;\n          }\n        }\n      }\n      return false;\n    };\n\n    Package.prototype.subscribeToActivationEvents = function() {\n      var event, selector, _i, _len, _ref, _ref1, _results, _results1;\n      if (this.metadata.activationEvents == null) {\n        return;\n      }\n      if (_.isArray(this.metadata.activationEvents)) {\n        _ref = this.metadata.activationEvents;\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          event = _ref[_i];\n          _results.push(atom.workspaceView.command(event, this.handleActivationEvent));\n        }\n        return _results;\n      } else if (_.isString(this.metadata.activationEvents)) {\n        return atom.workspaceView.command(this.metadata.activationEvents, this.handleActivationEvent);\n      } else {\n        _ref1 = this.metadata.activationEvents;\n        _results1 = [];\n        for (event in _ref1) {\n          selector = _ref1[event];\n          _results1.push(atom.workspaceView.command(event, selector, this.handleActivationEvent));\n        }\n        return _results1;\n      }\n    };\n\n    Package.prototype.handleActivationEvent = function(event) {\n      var bubblePathEventHandlers;\n      bubblePathEventHandlers = this.disableEventHandlersOnBubblePath(event);\n      this.activateNow();\n      if ($ == null) {\n        $ = require('./space-pen-extensions').$;\n      }\n      $(event.target).trigger(event);\n      this.restoreEventHandlersOnBubblePath(bubblePathEventHandlers);\n      this.unsubscribeFromActivationEvents();\n      return false;\n    };\n\n    Package.prototype.unsubscribeFromActivationEvents = function() {\n      var event, selector, _i, _len, _ref, _ref1, _results, _results1;\n      if (atom.workspaceView == null) {\n        return;\n      }\n      if (_.isArray(this.metadata.activationEvents)) {\n        _ref = this.metadata.activationEvents;\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          event = _ref[_i];\n          _results.push(atom.workspaceView.off(event, this.handleActivationEvent));\n        }\n        return _results;\n      } else if (_.isString(this.metadata.activationEvents)) {\n        return atom.workspaceView.off(this.metadata.activationEvents, this.handleActivationEvent);\n      } else {\n        _ref1 = this.metadata.activationEvents;\n        _results1 = [];\n        for (event in _ref1) {\n          selector = _ref1[event];\n          _results1.push(atom.workspaceView.off(event, selector, this.handleActivationEvent));\n        }\n        return _results1;\n      }\n    };\n\n    Package.prototype.disableEventHandlersOnBubblePath = function(event) {\n      var bubblePathEventHandlers, disabledHandler, element, eventHandler, eventHandlers, _i, _len, _ref;\n      bubblePathEventHandlers = [];\n      disabledHandler = function() {};\n      if ($ == null) {\n        $ = require('./space-pen-extensions').$;\n      }\n      element = $(event.target);\n      while (element.length) {\n        if (eventHandlers = (_ref = element.handlers()) != null ? _ref[event.type] : void 0) {\n          for (_i = 0, _len = eventHandlers.length; _i < _len; _i++) {\n            eventHandler = eventHandlers[_i];\n            eventHandler.disabledHandler = eventHandler.handler;\n            eventHandler.handler = disabledHandler;\n            bubblePathEventHandlers.push(eventHandler);\n          }\n        }\n        element = element.parent();\n      }\n      return bubblePathEventHandlers;\n    };\n\n    Package.prototype.restoreEventHandlersOnBubblePath = function(eventHandlers) {\n      var eventHandler, _i, _len, _results;\n      _results = [];\n      for (_i = 0, _len = eventHandlers.length; _i < _len; _i++) {\n        eventHandler = eventHandlers[_i];\n        eventHandler.handler = eventHandler.disabledHandler;\n        _results.push(delete eventHandler.disabledHandler);\n      }\n      return _results;\n    };\n\n    return Package;\n\n  })();\n\n}).call(this);\n","markers":{"markers":{"1":{"id":1,"range":[[498,24],[498,50]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":76,"autoscroll":true,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"},"30":{"id":30,"range":[[159,39],[159,39]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"50":{"id":50,"range":[[159,39],[159,39]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"94":{"id":94,"range":[[452,48],[452,48]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"95":{"id":95,"range":[[452,48],[452,48]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Applications/Atom.app/Contents/Resources/app/src/package.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"5551d6359f6f1c2cbc1875b81b2a3404de8d40cf","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"items":[{"id":76,"softTabs":true,"displayBuffer":{"id":77,"softWrap":false,"editorWidthInChars":178,"scrollTop":9635,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Applications/Atom.app/Contents/Resources/app/src/package.js","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Applications/Atom.app/Contents/Resources/app/src/package.js","focused":false,"active":true,"deserializer":"Pane"},"deserializer":"PaneContainer"},"fullScreen":false,"deserializer":"Workspace"},"packageStates":{"find-and-replace":{"viewState":{"findHistory":["requiremainmodule","mainmodule","requiremainmodule","console.log","atom.workspaceView","atom.workspaceView.command"],"replaceHistory":[],"modelState":{"useRegex":false,"inCurrentSelection":false,"caseSensitive":false}},"projectViewState":{"findHistory":["has no method","activate","atom.workspaceView.command"],"replaceHistory":[],"pathsHistory":[],"modelState":{"useRegex":false,"caseSensitive":false}},"resultsModelState":{"useRegex":false,"caseSensitive":false}},"fuzzy-finder":{"/Applications/Atom.app/Contents/Resources/app/src/package.js":1399486251707},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":22191529},"tree-view":{"directoryExpansionStates":{},"selectedPath":"/Applications/Atom.app/Contents/Resources/app/src","hasFocus":true,"attached":true,"scrollLeft":4,"scrollTop":0,"width":200}}}